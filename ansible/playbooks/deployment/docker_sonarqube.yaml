---
- name: Deploy Sonarqube latest
  hosts: controller
  gather_facts: false

  tasks:
    - name: Ensure the volume is created
      community.docker.docker_volume:
        name: sonarqube_db

    - name: Ensure the volume is created
      community.docker.docker_volume:
        name: sonarqube_db_data

    - name: Ensure the volume is created
      community.docker.docker_volume:
        name: sonarqube_conf

    - name: Ensure the volume is created
      community.docker.docker_volume:
        name: sonarqube_data

    - name: Ensure the volume is created
      community.docker.docker_volume:
        name: sonarqube_extensions

    - name: Ensure the volume is created
      community.docker.docker_volume:
        name: sonarqube_logs

    - name: Ensure the volume is created
      community.docker.docker_volume:
        name: sonarqube_temp

    - name: Ensure the devops network is created
      community.docker.docker_network:
        name: devops_network
        state: present

    - name: Deploy Sonarqube Postgres database
      community.docker.docker_container:
        name: sonarqube_postgres
        image: postgres:latest
        env:
          POSTGRES_USER: sonar
          POSTGRES_PASSWORD: sonar
          POSTGRES_DB: sonarqube_db
        volumes:
          - sonarqube_conf:/opt/sonarqube/conf
          - sonarqube_data:/opt/sonarqube/data
          - sonarqube_extensions:/opt/sonarqube/extensions
          - sonarqube_logs:/opt/sonarqube/logs
          - sonarqube_temp:/opt/sonarqube/temp
        networks:
          - name: devops_network
        restart_policy: unless-stopped
        state: started

    - name: Deploy Sonarqube
      community.docker.docker_container:
        name: sonarqube
        image: "sonarqube:community"
        ports:
          - "9000:9000"
        env:
          SONAR_JDBC_URL: jdbc:postgresql://sonarqube_postgres:5432/sonarqube_db
          SONAR_JDBC_USERNAME: sonar
          SONAR_JDBC_PASSWORD: sonar
        volumes:
          - sonarqube_db:/var/lib/postgresql
          - sonarqube_db_data:/var/lib/postgresql/data
        networks:
          - name: devops_network
        restart_policy: unless-stopped
        state: started

    - name: Allow traffic in default zone on port 9000/tcp for metrics endpoint
      ansible.posix.firewalld:
        port: 9000/tcp
        permanent: true
        state: enabled
      become: true

    - name: Change sysctl file to increase the default vm.max_map_count from 65530 to 262144 recommended by Elastic Search required to deploy Sonarqube
      ansible.builtin.lineinfile:
        path: "/etc/sysctl.conf"
        state: present
        create: true
        search_string: 'vm.max_map_count = 262144'
        line: "vm.max_map_count = 262144"
      become: true

    - name: Reload the settings
      ansible.builtin.command: sysctl --system
      become: true

    - name: Retrieve the settings for confirmation
      ansible.builtin.command: sysctl vm.max_map_count
      register: max_map_count

    - name: Print vm.max_map_count that should match 262144
      ansible.builtin.debug:
        var: max_map_count